{"version":3,"sources":["configurator/components/MenuItems.module.scss","configurator/Configurator.module.scss","store/constants.js","configurator/configuratorReducer.js","store/reducers.js","store/store.js","configurator/configuratorActions.js","configurator/components/Menu.js","configurator/components/ItemsList.js","configurator/components/MenuItems.js","utils/createProductThumb.js","utils/imageResize.js","configurator/components/ItemImg.js","translations.js","configurator/components/ProductEmailForm.js","configurator/components/SendProductEmail.js","utils/createProductPdf.js","configurator/components/TemplatePDF.js","configurator/components/Summary.js","utils/saveBase64AsFile.js","configurator/components/SavedProducts.js","configurator/Configurator.js","Router.js","app/App.js","serviceWorker.js","i18n.js","index.js","configurator/components/Menu.module.scss","configurator/components/Summary.module.scss","configurator/components/SavedProducts.module.scss","configurator/components/ItemsList.module.scss","configurator/components/ItemImg.module.scss"],"names":["module","exports","wrapper","header","contentWrapper","loadingSpinner","loadingSpinnerBorder","lang","lang__btn","active","CONFIGURATOR_GET_CATEGORIES_START","CONFIGURATOR_GET_CATEGORIES_SUCCESS","CONFIGURATOR_GET_CATEGORIES_ERROR","CONFIGURATOR_PRODUCT_EMAIL_MODAL_TOGGLE","CONFIGURATOR_PRODUCT_EMAIL_MODAL_OPEN","CONFIGURATOR_GET_DEFAULT_CATEGORY","CONFIGURATOR_SAVE_ROUTE_LNG","settingsLocalStorage","JSON","parse","localStorage","getItem","initialState","isLoading","isError","categories","isCategoriesLoaded","savedProductsModal","productExists","productEmailModal","defaultCategory","routeLng","defaultLng","userSettings","Object","objectSpread","activeCategoryId","activeItems","savedProducts","rootReducer","combineReducers","configuratorStore","state","arguments","length","undefined","action","type","defaultActiveItems","toConsumableArray","map","item","defineProperty","id","items","reduce","obj1","obj2","userSettingsDefaultItems","userSettingsActiveItems","payload","setItem","stringify","saveActiveItemsUserSettings","category","activeItem","activeItemExist","firstCategoryId","categoryId","categoriesSetActive","userSettingsActiveCategory","index","savedProductsRemove","splice","userSettingsRemoveProduct","savedProductsAdd","img","productParts","concat","userSettingsAddProduct","findIndex","existingSavedProducts","filter","product","keys","every","key","categoryIndex","Number","constants","data","matchCategoryIndex","activeCategorySlug","slug","lng","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","setActiveItems","setActiveCategory","addProduct","getCategories","API_CATEGORIES","dispatch","fetch","then","response","json","getCategoriesSuccess","catch","error","getCategoriesError","Menu","handleCategoryClick","_this","props","_this2","this","t","menu","react_default","a","createElement","react_router_dom","to","className","styles","link","activeClassName","onClick","bind","name","summary","Component","withRouter","connect","configuratorActions","withTranslation","ItemsList","handleClick","itemId","activeCategory","list","src","process","alt","simpleModel","imgThumb","thumb","Fragment","checkProductExist","MenuItems","activeCategoryName","components_ItemsList","createProductThumb","html2pdf","set","html2canvas","logging","ignoreElements","element","from","document","querySelector","toImg","outputImg","image","width","height","format","Promise","success","reject","addEventListener","newCanvas","ctx","getContext","drawImage","imageResizedUrl","toDataURL","imageResize","imgResizedUrl","ItemImg","componentUpdated","handleAddClick","openSavedProducts","images","imgLarge","style","zIndex","indexCss","btnAddProduct","btnAdd","bg","backgroundImage","onlyImg","translations","pl","translation","loading","configurator","routeCategoryName","routeSummaryName","save_product","saved_product","saved_products","add_product","form_sent","form_error","send_product_email","your_product","save_product_as_img","save_product_as_pdf","remove","error_email","error_title","enter_message","error_regulation","regulation","submit","ready","your_email","recipient_email","agree_regulations","required_fields","title","message","en","input","_ref","label","_ref$meta","meta","touched","Label","htmlFor","Input","assign","checkbox","_ref2","_ref2$meta","check","reduxForm","validate","values","currentLanguage","i18n","language","errors","emailPatt","test","emailSender","emailRecipient","console","log","handleSubmit","pristine","submitting","Form","onSubmit","noValidate","FormGroup","Field","component","Button","color","disabled","Spinner","size","SendProductEmail","successMessage","errorMessage","handleToggleModal","productEmailModalToggle","FormData","hasOwnProperty","append","margin","jsPDF","orientation","outputPdf","pdf","API_PRODUCT_EMAIL","method","body","resp","ok","setState","prevProps","setTimeout","modalProductEmail","Modal","isOpen","toggle","ModalHeader","ModalBody","ProductEmailForm","productDetails","details","categoryName","itemName","forEach","components_ItemImg","Summary","creatingPdf","creatingImg","handleOpenProductsClick","handleSaveProductImgClick","base64","fileName","setAttribute","display","appendChild","click","handleSaveProductPdfClick","filename","save","handleProductEmailModalOpen","productEmailModalOpen","savedProductsCount","components_SendProductEmail","components_TemplatePDF","SavedProducts","handleProductClick","savedProductsToggle","handleAddProductClick","e","visibility","handleRemoveProductClick","removeProduct","checkSavedProducts","modal","savedProductsList","productsAreEqual","activeItemClass","itemWrapper","ref","btnRemove","btnChange","centered","Configurator","changeLanguage","saveRouteLng","API","activeCategoryIndex","summaryActive","match","path","matchCategorySlug","params","matchCategoryId","firstCategorySlug","history","replace","setDefaultActiveItems","_this3","setRouteLang","getApiCategories","setDefaultItems","setDefaultCategory","getDefaultCategory","_this4","_this5","spinner","role","_loop","push","toUpperCase","components_Menu","react_router","components_SavedProducts","Rtr","languages","join","basename","getLanguagesString","Loader","App","es","react","fallback","App_Loader","Router","Boolean","location","hostname","use","LanguageDetector","initReactI18next","init","fallbackLng","resources","interpolation","escapeValue","ReactDOM","render","app_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.85d504c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MenuItems_wrapper__NmpsO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Configurator_wrapper__14rRC\",\"header\":\"Configurator_header__1unvX\",\"contentWrapper\":\"Configurator_contentWrapper__3onhG\",\"loadingSpinner\":\"Configurator_loadingSpinner__Q4exP\",\"loadingSpinnerBorder\":\"Configurator_loadingSpinnerBorder__1fbgI\",\"lang\":\"Configurator_lang__3pDwN\",\"lang__btn\":\"Configurator_lang__btn__CByYq\",\"active\":\"Configurator_active__1-IGR\"};","export const CONFIGURATOR_SET_DEFAULT_ACTIVE_ITEMS =\r\n  'CONFIGURATOR_SET_DEFAULT_ACTIVE_ITEMS';\r\nexport const CONFIGURATOR_SET_ACTIVE_ITEMS = 'CONFIGURATOR_SET_ACTIVE_ITEMS';\r\nexport const CONFIGURATOR_SET_ACTIVE_CATEGORY =\r\n  'CONFIGURATOR_SET_ACTIVE_CATEGORY';\r\nexport const CONFIGURATOR_SAVED_PRODUCTS_TOGGLE =\r\n  'CONFIGURATOR_SAVED_PRODUCTS_TOGGLE';\r\nexport const CONFIGURATOR_OPEN_SAVED_PRODUCTS =\r\n  'CONFIGURATOR_OPEN_SAVED_PRODUCTS';\r\nexport const CONFIGURATOR_REMOVE_PRODUCT = 'CONFIGURATOR_REMOVE_PRODUCT';\r\nexport const CONFIGURATOR_ADD_PRODUCT = 'CONFIGURATOR_ADD_PRODUCT';\r\nexport const CONFIGURATOR_CHECK_PRODUCT_EXIST =\r\n  'CONFIGURATOR_CHECK_PRODUCT_EXIST';\r\nexport const CONFIGURATOR_CHECK_SAVED_PRODUCTS =\r\n  'CONFIGURATOR_CHECK_SAVED_PRODUCTS';\r\nexport const CONFIGURATOR_GET_CATEGORIES_START =\r\n  'CONFIGURATOR_GET_CATEGORIES_START';\r\nexport const CONFIGURATOR_GET_CATEGORIES_SUCCESS =\r\n  'CONFIGURATOR_GET_CATEGORIES_SUCCESS';\r\nexport const CONFIGURATOR_GET_CATEGORIES_ERROR =\r\n  'CONFIGURATOR_GET_CATEGORIES_ERROR';\r\nexport const CONFIGURATOR_PRODUCT_EMAIL_MODAL_TOGGLE =\r\n  'CONFIGURATOR_PRODUCT_EMAIL_MODAL_TOGGLE';\r\nexport const CONFIGURATOR_PRODUCT_EMAIL_MODAL_OPEN =\r\n  'CONFIGURATOR_PRODUCT_EMAIL_MODAL_OPEN';\r\nexport const CONFIGURATOR_GET_DEFAULT_CATEGORY =\r\n  'CONFIGURATOR_GET_DEFAULT_CATEGORY';\r\nexport const CONFIGURATOR_SAVE_ROUTE_LNG = 'CONFIGURATOR_SAVE_ROUTE_LNG';\r\n","import * as constants from '../store/constants';\r\n\r\nconst settingsLocalStorage = JSON.parse(localStorage.getItem('userSettings'));\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isError: false,\r\n  categories: [],\r\n  isCategoriesLoaded: false,\r\n  savedProductsModal: false,\r\n  productExists: false,\r\n  productEmailModal: false,\r\n  defaultCategory: '',\r\n  routeLng: '',\r\n  defaultLng: 'pl',\r\n  userSettings: {\r\n    activeCategoryId: null,\r\n    activeItems: null,\r\n    savedProducts: [],\r\n    ...settingsLocalStorage\r\n  }\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case constants.CONFIGURATOR_SET_DEFAULT_ACTIVE_ITEMS:\r\n      const defaultActiveItems =\r\n        state.categories.length > 0 &&\r\n        [...state.categories]\r\n          .map(item => {\r\n            return {\r\n              [item.id]: item.items[0].id\r\n            };\r\n          })\r\n          .reduce((obj1, obj2) => {\r\n            return {\r\n              ...obj1,\r\n              ...obj2\r\n            };\r\n          });\r\n\r\n      const userSettingsDefaultItems = {\r\n        ...state.userSettings,\r\n        activeItems: defaultActiveItems\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        userSettings: userSettingsDefaultItems\r\n      };\r\n    case constants.CONFIGURATOR_SET_ACTIVE_ITEMS:\r\n      let categories = [];\r\n      let userSettingsActiveItems = {};\r\n\r\n      function saveActiveItemsUserSettings() {\r\n        const activeItems = {\r\n          ...state.userSettings.activeItems,\r\n          ...action.payload.items\r\n        };\r\n\r\n        userSettingsActiveItems = {\r\n          ...state.userSettings,\r\n          activeItems\r\n        };\r\n\r\n        localStorage.setItem(\r\n          'userSettings',\r\n          JSON.stringify(userSettingsActiveItems)\r\n        );\r\n      }\r\n\r\n      function setActiveItems() {\r\n        categories = state.categories.map(category => {\r\n          const activeItem = userSettingsActiveItems.activeItems[category.id];\r\n          let items = [];\r\n          let activeItemExist = false;\r\n\r\n          items = category.items.map(item => {\r\n            if (item.id === activeItem) {\r\n              activeItemExist = true;\r\n\r\n              return {\r\n                ...item,\r\n                active: true\r\n              };\r\n            }\r\n\r\n            return {\r\n              ...item,\r\n              active: false\r\n            };\r\n          });\r\n\r\n          if (!activeItemExist) {\r\n            items[0].active = true;\r\n          }\r\n\r\n          return {\r\n            ...category,\r\n            items\r\n          };\r\n        });\r\n      }\r\n\r\n      saveActiveItemsUserSettings();\r\n      setActiveItems();\r\n\r\n      return { ...state, userSettings: userSettingsActiveItems, categories };\r\n    case constants.CONFIGURATOR_SET_ACTIVE_CATEGORY:\r\n      const firstCategoryId =\r\n        state.categories.length > 0 && state.categories[0].id;\r\n      const activeCategoryId = action.payload.categoryId\r\n        ? action.payload.categoryId\r\n        : firstCategoryId;\r\n\r\n      const categoriesSetActive = state.categories.map(category => {\r\n        if (category.id === activeCategoryId) {\r\n          return {\r\n            ...category,\r\n            active: true\r\n          };\r\n        } else {\r\n          return {\r\n            ...category,\r\n            active: false\r\n          };\r\n        }\r\n      });\r\n\r\n      const userSettingsActiveCategory = {\r\n        ...state.userSettings,\r\n        activeCategoryId\r\n      };\r\n\r\n      localStorage.setItem(\r\n        'userSettings',\r\n        JSON.stringify(userSettingsActiveCategory)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        categories: categoriesSetActive,\r\n        userSettings: userSettingsActiveCategory\r\n      };\r\n    case constants.CONFIGURATOR_SAVED_PRODUCTS_TOGGLE:\r\n      return {\r\n        ...state,\r\n        savedProductsModal: !state.savedProductsModal\r\n      };\r\n    case constants.CONFIGURATOR_OPEN_SAVED_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        savedProductsModal: true\r\n      };\r\n    case constants.CONFIGURATOR_REMOVE_PRODUCT:\r\n      const index = action.payload.index;\r\n      let savedProductsRemove = [...state.userSettings.savedProducts];\r\n\r\n      savedProductsRemove.splice(index, 1);\r\n\r\n      const userSettingsRemoveProduct = {\r\n        ...state.userSettings,\r\n        savedProducts: savedProductsRemove\r\n      };\r\n\r\n      localStorage.setItem(\r\n        'userSettings',\r\n        JSON.stringify(userSettingsRemoveProduct)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        userSettings: userSettingsRemoveProduct\r\n      };\r\n    case constants.CONFIGURATOR_ADD_PRODUCT:\r\n      let savedProductsAdd = [...state.userSettings.savedProducts];\r\n      const newProduct = {\r\n        img: action.payload.img,\r\n        productParts: state.userSettings.activeItems\r\n      };\r\n\r\n      savedProductsAdd = [newProduct, ...savedProductsAdd];\r\n\r\n      const userSettingsAddProduct = {\r\n        ...state.userSettings,\r\n        savedProducts: savedProductsAdd\r\n      };\r\n\r\n      localStorage.setItem(\r\n        'userSettings',\r\n        JSON.stringify(userSettingsAddProduct)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        userSettings: userSettingsAddProduct\r\n      };\r\n    case constants.CONFIGURATOR_CHECK_PRODUCT_EXIST:\r\n      const productExists =\r\n        state.userSettings.savedProducts.findIndex(\r\n          item =>\r\n            JSON.stringify(item.productParts) ===\r\n            JSON.stringify(state.userSettings.activeItems)\r\n        ) > -1\r\n          ? true\r\n          : false;\r\n\r\n      return {\r\n        ...state,\r\n        productExists\r\n      };\r\n    case constants.CONFIGURATOR_CHECK_SAVED_PRODUCTS:\r\n      const existingSavedProducts = [\r\n        ...state.userSettings.savedProducts\r\n      ].filter(product => {\r\n        return Object.keys(product.productParts).every(function(key) {\r\n          const categoryIndex = state.categories.findIndex(category => {\r\n            return category.id === Number(key);\r\n          });\r\n\r\n          if (categoryIndex > -1) {\r\n            const itemIndex = state.categories[categoryIndex].items.findIndex(\r\n              item => item.id === product.productParts[key]\r\n            );\r\n\r\n            if (itemIndex > -1) {\r\n              return true;\r\n            } else {\r\n              return false;\r\n            }\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        userSettings: {\r\n          ...state.userSettings,\r\n          savedProducts: existingSavedProducts\r\n        }\r\n      };\r\n    case constants.CONFIGURATOR_GET_CATEGORIES_START:\r\n      return { ...state, isLoading: true };\r\n    case constants.CONFIGURATOR_GET_CATEGORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isCategoriesLoaded: true,\r\n        categories: action.payload.data\r\n      };\r\n    case constants.CONFIGURATOR_GET_CATEGORIES_ERROR:\r\n      return { ...state, isLoading: false, isError: true };\r\n    case constants.CONFIGURATOR_PRODUCT_EMAIL_MODAL_TOGGLE:\r\n      return {\r\n        ...state,\r\n        productEmailModal: !state.productEmailModal\r\n      };\r\n    case constants.CONFIGURATOR_PRODUCT_EMAIL_MODAL_OPEN:\r\n      return {\r\n        ...state,\r\n        productEmailModal: true\r\n      };\r\n    case constants.CONFIGURATOR_GET_DEFAULT_CATEGORY:\r\n      const matchCategoryIndex = state.categories.findIndex(\r\n        category => category.id === state.userSettings.activeCategoryId\r\n      );\r\n      let activeCategorySlug = null;\r\n\r\n      if (matchCategoryIndex > -1) {\r\n        activeCategorySlug = state.categories[matchCategoryIndex].slug;\r\n      }\r\n\r\n      let defaultCategory = '';\r\n\r\n      if (activeCategorySlug !== null) {\r\n        defaultCategory = activeCategorySlug;\r\n      } else {\r\n        if (state.categories.length) {\r\n          defaultCategory = state.categories[0].slug;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        defaultCategory\r\n      };\r\n    case constants.CONFIGURATOR_SAVE_ROUTE_LNG:\r\n      const routeLng =\r\n        action.payload.lng === state.defaultLng ? '' : '/' + action.payload.lng;\r\n\r\n      return {\r\n        ...state,\r\n        routeLng\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport configuratorReducer from '../configurator/configuratorReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  configuratorStore: configuratorReducer,\r\n  form: formReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  /* preloadedState, */\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import * as constants from '../store/constants';\r\n\r\nexport const setDefaultActiveItems = () => {\r\n  return {\r\n    type: constants.CONFIGURATOR_SET_DEFAULT_ACTIVE_ITEMS\r\n  };\r\n};\r\n\r\nexport const setActiveItems = items => {\r\n  return {\r\n    type: constants.CONFIGURATOR_SET_ACTIVE_ITEMS,\r\n    payload: {\r\n      items\r\n    }\r\n  };\r\n};\r\n\r\nexport const setActiveCategory = categoryId => {\r\n  return {\r\n    type: constants.CONFIGURATOR_SET_ACTIVE_CATEGORY,\r\n    payload: {\r\n      categoryId\r\n    }\r\n  };\r\n};\r\n\r\nexport const savedProductsToggle = () => {\r\n  return {\r\n    type: constants.CONFIGURATOR_SAVED_PRODUCTS_TOGGLE\r\n  };\r\n};\r\n\r\nexport const openSavedProducts = () => {\r\n  return {\r\n    type: constants.CONFIGURATOR_OPEN_SAVED_PRODUCTS\r\n  };\r\n};\r\n\r\nexport const removeProduct = index => {\r\n  return {\r\n    type: constants.CONFIGURATOR_REMOVE_PRODUCT,\r\n    payload: {\r\n      index\r\n    }\r\n  };\r\n};\r\n\r\nexport const addProduct = img => {\r\n  return {\r\n    type: constants.CONFIGURATOR_ADD_PRODUCT,\r\n    payload: {\r\n      img\r\n    }\r\n  };\r\n};\r\n\r\nexport const checkProductExist = () => {\r\n  return {\r\n    type: constants.CONFIGURATOR_CHECK_PRODUCT_EXIST\r\n  };\r\n};\r\n\r\nexport const checkSavedProducts = () => {\r\n  return {\r\n    type: constants.CONFIGURATOR_CHECK_SAVED_PRODUCTS\r\n  };\r\n};\r\n\r\nexport function getCategories(API_CATEGORIES) {\r\n  return dispatch => {\r\n    dispatch(getCategoriesStart());\r\n\r\n    return fetch(API_CATEGORIES)\r\n      .then(response => response.json())\r\n      .then(data => dispatch(getCategoriesSuccess(data)))\r\n      .catch(error => dispatch(getCategoriesError(error)));\r\n  };\r\n}\r\n\r\nexport function getCategoriesStart() {\r\n  return {\r\n    type: constants.CONFIGURATOR_GET_CATEGORIES_START\r\n  };\r\n}\r\n\r\nexport function getCategoriesSuccess(data) {\r\n  return {\r\n    type: constants.CONFIGURATOR_GET_CATEGORIES_SUCCESS,\r\n    payload: {\r\n      data\r\n    }\r\n  };\r\n}\r\n\r\nexport function getCategoriesError(error) {\r\n  return {\r\n    type: constants.CONFIGURATOR_GET_CATEGORIES_ERROR,\r\n    payload: {\r\n      error\r\n    }\r\n  };\r\n}\r\n\r\nexport function productEmailModalToggle() {\r\n  return {\r\n    type: constants.CONFIGURATOR_PRODUCT_EMAIL_MODAL_TOGGLE\r\n  };\r\n}\r\n\r\nexport function productEmailModalOpen() {\r\n  return {\r\n    type: constants.CONFIGURATOR_PRODUCT_EMAIL_MODAL_OPEN\r\n  };\r\n}\r\n\r\nexport function getDefaultCategory() {\r\n  return {\r\n    type: constants.CONFIGURATOR_GET_DEFAULT_CATEGORY\r\n  };\r\n}\r\n\r\nexport function saveRouteLng(lng) {\r\n  return {\r\n    type: constants.CONFIGURATOR_SAVE_ROUTE_LNG,\r\n    payload: {\r\n      lng\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as configuratorActions from '../configuratorActions';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport styles from './Menu.module.scss';\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nclass Menu extends Component {\r\n  handleCategoryClick = categoryId => {\r\n    this.props.setActiveCategory(categoryId);\r\n  };\r\n\r\n  render() {\r\n    const t = this.props.t;\r\n    const categories = this.props.configuratorStore.categories;\r\n\r\n    const menu = categories.map(item => {\r\n      return (\r\n        <NavLink\r\n          to={\r\n            this.props.routeLng + '/' + t('routeCategoryName') + '/' + item.slug\r\n          }\r\n          key={item.id}\r\n          className={`d-block px-5 py-3 ${styles.link}`}\r\n          activeClassName={styles.active}\r\n          onClick={this.handleCategoryClick.bind(this, item.id)}\r\n        >\r\n          {item.name}\r\n        </NavLink>\r\n      );\r\n    });\r\n\r\n    const summary = (\r\n      <NavLink\r\n        to={this.props.routeLng + '/' + t('routeSummaryName')}\r\n        className={`d-block px-5 py-3 ${styles.link}`}\r\n        activeClassName={styles.active}\r\n      >\r\n        {t('ready')}\r\n      </NavLink>\r\n    );\r\n\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        {menu}\r\n        {categories.length ? summary : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state,\r\n    routeLng: state.configuratorStore.routeLng\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setActiveCategory: categoryId =>\r\n      dispatch(configuratorActions.setActiveCategory(categoryId))\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withTranslation()(Menu))\r\n);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as configuratorActions from '../configuratorActions';\r\n\r\nimport styles from './ItemsList.module.scss';\r\n\r\nclass ItemsList extends Component {\r\n  handleClick = (activeCategoryId, itemId) => {\r\n    this.props.setActiveItems({ [activeCategoryId]: itemId });\r\n  };\r\n\r\n  list() {\r\n    const activeCategory = this.props.configuratorStore.categories.filter(\r\n      category => category.active === true\r\n    )[0];\r\n\r\n    let list = [];\r\n\r\n    if (activeCategory) {\r\n      list = activeCategory.items.map(item => {\r\n        const activeItemClass = () => item.active && styles.active;\r\n\r\n        return (\r\n          <div\r\n            key={item.id}\r\n            className=\"col-md-6 p-4 d-flex justify-content-center align-content-center\"\r\n          >\r\n            <button\r\n              className={`${styles.item} ${activeItemClass()}`}\r\n              onClick={this.handleClick.bind(this, activeCategory.id, item.id)}\r\n            >\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/img/simple-model.png`}\r\n                alt=\"\"\r\n                className={styles.simpleModel}\r\n              />\r\n              <img\r\n                src={process.env.PUBLIC_URL + item.imgThumb}\r\n                alt=\"\"\r\n                className={styles.thumb}\r\n              />\r\n              {item.name}\r\n            </button>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    return <>{this.list()}</>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { ...state };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setActiveItems: items =>\r\n      dispatch(configuratorActions.setActiveItems(items)),\r\n    checkProductExist: () => dispatch(configuratorActions.checkProductExist())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ItemsList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import * as configuratorActions from '../configuratorActions';\r\n\r\nimport styles from './MenuItems.module.scss';\r\n\r\nimport ItemsList from './ItemsList';\r\n\r\nclass MenuItems extends Component {\r\n  render() {\r\n    const activeCategory = this.props.configuratorStore.categories.filter(\r\n      category => category.active === true\r\n    )[0];\r\n    const activeCategoryName = activeCategory && activeCategory.name;\r\n\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        {activeCategoryName ? (\r\n          <div className=\"text-center py-4\">\r\n            <h2>{activeCategoryName}</h2>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"row\">\r\n          <ItemsList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { ...state };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MenuItems);\r\n","import html2pdf from 'html2pdf.js';\r\nimport imageResize from './imageResize';\r\n\r\nexport default function createProductThumb(action) {\r\n  const opt = {\r\n    html2canvas: {\r\n      logging: false,\r\n      ignoreElements: element => element.id === 'btnAdd'\r\n    }\r\n  };\r\n\r\n  html2pdf()\r\n    .set(opt)\r\n    .from(document.querySelector('#product'))\r\n    .toImg()\r\n    .outputImg()\r\n    .then(image => {\r\n      imageResize(image, 186, 124).then(imgResizedUrl => {\r\n        action(imgResizedUrl);\r\n      });\r\n    });\r\n}\r\n","export default function imageResize(image, width, height, format = 'jpeg') {\r\n  return new Promise(function(success, reject) {\r\n    image.addEventListener('load', () => {\r\n      const newCanvas = document.createElement('canvas');\r\n      let ctx = newCanvas.getContext('2d');\r\n      newCanvas.width = width;\r\n      newCanvas.height = height;\r\n      ctx.drawImage(image, 0, 0, width, height);\r\n\r\n      const imageResizedUrl = newCanvas.toDataURL(`image/${format}`);\r\n\r\n      success(imageResizedUrl);\r\n    });\r\n  });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as configuratorActions from '../configuratorActions';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport styles from './ItemImg.module.scss';\r\n\r\nimport createProductThumb from '../../utils/createProductThumb';\r\n\r\nclass ItemImg extends Component {\r\n  componentUpdated = false;\r\n\r\n  handleAddClick = () => {\r\n    if (!this.props.configuratorStore.productExists) {\r\n      this.props.openSavedProducts();\r\n      createProductThumb(this.props.addProduct);\r\n    } else {\r\n      this.props.openSavedProducts();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.checkProductExist();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (!this.componentUpdated) {\r\n      this.props.checkProductExist();\r\n\r\n      this.componentUpdated = true;\r\n    } else {\r\n      this.componentUpdated = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const t = this.props.t;\r\n    const categories = this.props.configuratorStore.categories;\r\n\r\n    const images = categories.map(category =>\r\n      category.items.map(item => {\r\n        if (item.active) {\r\n          return (\r\n            <img\r\n              src={process.env.PUBLIC_URL + item.imgLarge}\r\n              alt=\"\"\r\n              key={item.id}\r\n              className={styles.img}\r\n              style={{ zIndex: item.indexCss }}\r\n            />\r\n          );\r\n        }\r\n        return null;\r\n      })\r\n    );\r\n\r\n    const productExists = this.props.configuratorStore.productExists;\r\n\r\n    const btnAddProduct = (\r\n      <button\r\n        className={`btn btn-primary ${styles.btnAdd} ${\r\n          productExists ? styles.active : undefined\r\n        }`}\r\n        id=\"btnAdd\"\r\n        onClick={this.handleAddClick}\r\n      >\r\n        {!productExists ? (\r\n          <span>{t('save_product')}</span>\r\n        ) : (\r\n          <span>{t('saved_product')}</span>\r\n        )}\r\n      </button>\r\n    );\r\n\r\n    return (\r\n      <div\r\n        className={styles.bg}\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/img/product-bg.jpg)`\r\n        }}\r\n        id=\"product\"\r\n      >\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/img/transparent-bg.png`}\r\n          alt=\"\"\r\n          className=\"img-fluid\"\r\n        />\r\n        {images}\r\n        {categories.length && !this.props.onlyImg ? btnAddProduct : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { ...state };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    openSavedProducts: () => dispatch(configuratorActions.openSavedProducts()),\r\n    addProduct: img => dispatch(configuratorActions.addProduct(img)),\r\n    checkProductExist: () => dispatch(configuratorActions.checkProductExist())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(ItemImg));\r\n","const translations = {\r\n  pl: {\r\n    translation: {\r\n      loading: 'Wczytywanie',\r\n      configurator: 'Konfigurator',\r\n      routeCategoryName: 'kategoria',\r\n      routeSummaryName: 'gotowe',\r\n      save_product: 'Zapisz produkt',\r\n      saved_product: 'Produkt zapisany',\r\n      saved_products: 'Zapisane produkty',\r\n      add_product: 'Dodaj produkt',\r\n      form_sent:\r\n        'Formularz został wysłany. Email nie został dostarczony: testowe API - http://httpbin.org/post. Odpowiedź z serwera w konsoli.',\r\n      form_error: 'Wystąpił błąd. Formularz nie został wysłany.',\r\n      send_product_email: 'Wyślij opis produktu w wiadomości E-mail',\r\n      your_product: 'Twój produkt',\r\n      save_product_as_img: 'Zapisz produkt jako obrazek',\r\n      save_product_as_pdf: 'Zapisz opis produktu jako PDF',\r\n      remove: 'Usuń',\r\n      error_email: 'Wpisz poprawny email',\r\n      error_title: 'Wpisz tytuł',\r\n      enter_message: 'Wpisz wiadomość',\r\n      error_regulation: 'Zaakteptuj zgodę',\r\n      regulation: 'Zaakceptuj zgodę',\r\n      submit: 'Wyślij',\r\n      ready: 'Gotowe',\r\n      your_email: 'Twój e-mail',\r\n      recipient_email: 'E-mail odbiorcy',\r\n      agree_regulations: 'Zaakceptuj zgodę',\r\n      required_fields: 'Wymagane pola',\r\n      title: 'Tytuł',\r\n      message: 'Wiadomość'\r\n    }\r\n  },\r\n  en: {\r\n    translation: {\r\n      loading: 'Loading',\r\n      configurator: 'Configurator',\r\n      routeCategoryName: 'category',\r\n      routeSummaryName: 'ready',\r\n      save_product: 'Save product',\r\n      saved_product: 'Product saved',\r\n      saved_products: 'Saved products',\r\n      add_product: 'Add product',\r\n      form_sent:\r\n        'The form has been sent. Email was not delivered: test API - http://httpbin.org/post. Response from the server in the console.',\r\n      form_error: 'An error occured. The form has not been sent.',\r\n      send_product_email: 'Send the product description in an E-mail message',\r\n      your_product: 'Your product',\r\n      save_product_as_img: 'Save the product as a picture',\r\n      save_product_as_pdf: 'Save the product description as PDF',\r\n      remove: 'Remove',\r\n      error_email: 'Enter the correct email',\r\n      error_title: 'Enter the title',\r\n      enter_message: 'Enter the message',\r\n      error_regulation: 'Accept consent',\r\n      regulation: 'Accept consent',\r\n      submit: 'Submit',\r\n      ready: 'Ready',\r\n      your_email: 'Your e-mail',\r\n      recipient_email: 'E-mail recipient',\r\n      agree_regulations: 'Accept consent',\r\n      required_fields: 'Required fields',\r\n      title: 'Title',\r\n      message: 'Message'\r\n    }\r\n  }\r\n};\r\n\r\nexport default translations;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport i18n from 'i18next';\r\nimport { withTranslation } from 'react-i18next';\r\nimport translations from '../../translations';\r\n\r\nimport { Button, Form, FormGroup, Label, Input, Spinner } from 'reactstrap';\r\n\r\nconst validate = values => {\r\n  const currentLanguage = i18n.language;\r\n  const errors = {};\r\n\r\n  const emailPatt = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n\r\n  if (!emailPatt.test(values.emailSender)) {\r\n    errors.emailSender = translations[currentLanguage].translation.error_email;\r\n  }\r\n\r\n  if (!emailPatt.test(values.emailRecipient)) {\r\n    errors.emailRecipient =\r\n      translations[currentLanguage].translation.error_email;\r\n  }\r\n\r\n  if (!values.title) {\r\n    errors.title = translations[currentLanguage].translation.error_title;\r\n  }\r\n\r\n  if (!values.regulation) {\r\n    errors.regulation =\r\n      translations[currentLanguage].translation.error_regulation;\r\n  }\r\n  console.log(errors);\r\n\r\n  return errors;\r\n};\r\n\r\nconst input = ({ input, id, label, type, meta: { touched, error } }) => (\r\n  <>\r\n    <Label htmlFor={id}>{label}</Label>\r\n    <Input id={id} {...input} type={type} />\r\n    <div className=\"text-danger\">\r\n      {touched && (error && <span>{error}</span>)}\r\n    </div>\r\n  </>\r\n);\r\n\r\nconst checkbox = ({ input, label, meta: { touched, error } }) => (\r\n  <>\r\n    <Label check>\r\n      <Input {...input} type=\"checkbox\" />\r\n      {label}\r\n    </Label>\r\n    <div className=\"text-danger\">\r\n      {touched && (error && <span>{error}</span>)}\r\n    </div>\r\n  </>\r\n);\r\n\r\nconst productEmailForm = props => {\r\n  const t = props.t;\r\n  const { handleSubmit, pristine, submitting } = props;\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} noValidate>\r\n      <FormGroup>\r\n        <Field\r\n          name=\"emailSender\"\r\n          id=\"emailSender\"\r\n          label={t('your_email') + '*'}\r\n          component={input}\r\n          type=\"email\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Field\r\n          name=\"emailRecipient\"\r\n          id=\"emailRecipient\"\r\n          label={t('recipient_email') + '*'}\r\n          component={input}\r\n          type=\"email\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Field\r\n          name=\"title\"\r\n          id=\"title\"\r\n          label={t('title') + '*'}\r\n          component={input}\r\n          type=\"text\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Field\r\n          name=\"message\"\r\n          id=\"message\"\r\n          label={t('message')}\r\n          component={input}\r\n          type=\"textarea\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup check>\r\n        <Field\r\n          name=\"regulation\"\r\n          label={t('agree_regulations') + '*'}\r\n          component={checkbox}\r\n        />\r\n      </FormGroup>\r\n      <p className=\"mt-4\">* {t('required_fields') + '*'}</p>\r\n      <Button\r\n        color=\"primary\"\r\n        className=\"mt-4\"\r\n        disabled={pristine || submitting}\r\n      >\r\n        {props.t('submit')}{' '}\r\n        {submitting && <Spinner size=\"sm\" color=\"danger\" className=\"ml-2\" />}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'productEmail',\r\n  validate\r\n})(withTranslation()(productEmailForm));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as configuratorActions from '../configuratorActions';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\nimport ProductEmailForm from './ProductEmailForm';\r\n\r\nimport createProductPdf from '../../utils/createProductPdf';\r\n\r\nimport { API_PRODUCT_EMAIL } from '../Configurator';\r\n\r\nclass SendProductEmail extends Component {\r\n  state = {\r\n    successMessage: '',\r\n    errorMessage: ''\r\n  };\r\n\r\n  handleToggleModal = () => {\r\n    this.props.productEmailModalToggle();\r\n  };\r\n\r\n  handleSubmit = values => {\r\n    const t = this.props.t;\r\n    const data = new FormData();\r\n\r\n    for (const key in values) {\r\n      if (values.hasOwnProperty(key)) {\r\n        data.append(key, values[key]);\r\n      }\r\n    }\r\n\r\n    return createProductPdf()\r\n      .then(pdf => {\r\n        data.append('product_pdf', pdf);\r\n      })\r\n      .then(() => {\r\n        return fetch(API_PRODUCT_EMAIL, {\r\n          method: 'POST',\r\n          body: data\r\n        })\r\n          .then(resp => {\r\n            if (resp.ok) {\r\n              this.setState({\r\n                submitting: false,\r\n                successMessage: t('form_sent'),\r\n                errorMessage: ''\r\n              });\r\n            } else {\r\n              this.setState({\r\n                submitting: false,\r\n                errorMessage: t('form_error')\r\n              });\r\n            }\r\n\r\n            return resp;\r\n          })\r\n          .then(resp => (resp.ok ? resp.json() : resp))\r\n          .then(resp => {\r\n            console.log(resp);\r\n          });\r\n      });\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.configuratorStore.productEmailModal !==\r\n      prevProps.configuratorStore.productEmailModal\r\n    ) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          successMessage: ''\r\n        });\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const t = this.props.t;\r\n    const modalProductEmail = this.props.configuratorStore.productEmailModal;\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={modalProductEmail}\r\n        toggle={this.handleToggleModal}\r\n        className={this.props.className}\r\n      >\r\n        <ModalHeader toggle={this.handleToggleModal}>\r\n          {t('send_product_email')}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {this.state.successMessage ? null : (\r\n            <ProductEmailForm onSubmit={this.handleSubmit} />\r\n          )}\r\n          <div className=\"my-4 text-center\">\r\n            {this.state.successMessage && <h3>{this.state.successMessage}</h3>}\r\n            {this.state.errorMessage && <h3>{this.state.errorMessage}</h3>}\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { ...state };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    productEmailModalToggle: () =>\r\n      dispatch(configuratorActions.productEmailModalToggle())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(SendProductEmail));\r\n","import html2pdf from 'html2pdf.js';\r\n\r\nexport default function createProductPdf() {\r\n  const opt = {\r\n    margin: 1,\r\n    image: { type: 'png' },\r\n    html2canvas: {\r\n      logging: false\r\n    },\r\n    jsPDF: { orientation: 'landscape' }\r\n  };\r\n\r\n  return html2pdf()\r\n    .set(opt)\r\n    .from(document.querySelector('#templatePDF'))\r\n    .outputPdf('blob');\r\n}\r\n","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport ItemImg from './ItemImg';\r\n\r\nfunction TemplatePDF(props) {\r\n  const productDetails = (\r\n    <table>\r\n      <tbody>\r\n        {props.categories.map(category => {\r\n          let details = {\r\n            categoryName: category.name,\r\n            itemName: ''\r\n          };\r\n\r\n          category.items.forEach(item => {\r\n            if (item.active === true) {\r\n              details.itemName = item.name;\r\n            }\r\n          });\r\n\r\n          return (\r\n            <tr key={category.id}>\r\n              <th className=\"py-2 px-4\">{details.categoryName}:</th>\r\n              <td className=\"py-2 px-4\">{details.itemName}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <div className=\"d-none\">\r\n      <div id=\"templatePDF\">\r\n        <h2 className=\"mt-5 mb-4 text-center text-uppercase\">\r\n          {props.t('your_product')}\r\n        </h2>\r\n        <div className=\"row\">\r\n          <div className=\"col-6 p-4\">\r\n            <ItemImg onlyImg={true} />\r\n          </div>\r\n          <div className=\"col-6 p-4\">{productDetails}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withTranslation()(TemplatePDF);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as configuratorActions from '../configuratorActions';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport styles from './Summary.module.scss';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport html2pdf from 'html2pdf.js';\r\nimport saveBase64AsFile from '../../utils/saveBase64AsFile';\r\n\r\nimport SendProductEmail from './SendProductEmail';\r\nimport TemplatePDF from './TemplatePDF';\r\n\r\nclass Summary extends Component {\r\n  state = {\r\n    creatingPdf: false,\r\n    creatingImg: false\r\n  };\r\n\r\n  handleOpenProductsClick = () => {\r\n    this.props.openSavedProducts();\r\n  };\r\n\r\n  handleSaveProductImgClick = () => {\r\n    this.setState({\r\n      creatingImg: true\r\n    });\r\n\r\n    const opt = {\r\n      html2canvas: {\r\n        logging: false,\r\n        ignoreElements: element => element.id === 'btnAdd'\r\n      }\r\n    };\r\n\r\n    html2pdf()\r\n      .set(opt)\r\n      .from(document.querySelector('#product'))\r\n      .toImg()\r\n      .outputImg('dataurlstring')\r\n      .then(image => {\r\n        return saveBase64AsFile(image, 'produkt.jpg');\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          creatingImg: false\r\n        });\r\n      });\r\n  };\r\n\r\n  handleSaveProductPdfClick = () => {\r\n    this.setState({\r\n      creatingPdf: true\r\n    });\r\n\r\n    const opt = {\r\n      margin: 1,\r\n      filename: 'produkt.pdf',\r\n      image: { type: 'png' },\r\n      html2canvas: {\r\n        logging: false\r\n      },\r\n      jsPDF: { orientation: 'landscape' }\r\n    };\r\n\r\n    html2pdf()\r\n      .set(opt)\r\n      .from(document.querySelector('#templatePDF'))\r\n      .save()\r\n      .then(() => {\r\n        this.setState({\r\n          creatingPdf: false\r\n        });\r\n      });\r\n  };\r\n\r\n  handleProductEmailModalOpen = () => {\r\n    this.props.productEmailModalOpen();\r\n  };\r\n\r\n  render() {\r\n    const t = this.props.t;\r\n    const savedProductsCount = this.props.configuratorStore.userSettings\r\n      .savedProducts.length;\r\n\r\n    return (\r\n      <>\r\n        <div className={styles.wrapper}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 p-4 d-flex justify-content-center align-content-center\">\r\n              <button\r\n                type=\"button\"\r\n                className={`btn p-3 ${styles.item}`}\r\n                onClick={this.handleOpenProductsClick}\r\n              >\r\n                {t('saved_products')} ({savedProductsCount})\r\n              </button>\r\n            </div>\r\n            <div className=\"col-md-6 p-4 d-flex justify-content-center align-content-center\">\r\n              <button\r\n                type=\"button\"\r\n                className={`btn p-3 ${styles.item}`}\r\n                onClick={this.handleSaveProductImgClick}\r\n                disabled={this.state.creatingImg}\r\n              >\r\n                {t('save_product_as_img')}\r\n                {this.state.creatingImg && (\r\n                  <div>\r\n                    <Spinner size=\"sm\" color=\"danger\" className=\"ml-2\" />\r\n                  </div>\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-md-6 p-4 d-flex justify-content-center align-content-center\">\r\n              <button\r\n                type=\"button\"\r\n                className={`btn p-3 ${styles.item}`}\r\n                onClick={this.handleSaveProductPdfClick}\r\n                disabled={this.state.creatingPdf}\r\n              >\r\n                {t('save_product_as_pdf')}\r\n                {this.state.creatingPdf && (\r\n                  <div>\r\n                    <Spinner size=\"sm\" color=\"danger\" className=\"ml-2\" />\r\n                  </div>\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-md-6 p-4 d-flex justify-content-center align-content-center\">\r\n              <button\r\n                type=\"button\"\r\n                className={`btn p-3 ${styles.item}`}\r\n                onClick={this.handleProductEmailModalOpen}\r\n              >\r\n                {t('send_product_email')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SendProductEmail />\r\n\r\n        <TemplatePDF categories={this.props.configuratorStore.categories} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { ...state };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    openSavedProducts: () => dispatch(configuratorActions.openSavedProducts()),\r\n    productEmailModalOpen: () =>\r\n      dispatch(configuratorActions.productEmailModalOpen())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(Summary));\r\n","export default function saveBase64AsFile(base64, fileName) {\r\n  return new Promise(function(success, reject) {\r\n    var link = document.createElement('a');\r\n\r\n    link.setAttribute('href', base64);\r\n    link.setAttribute('download', fileName);\r\n    link.style.display = 'none';\r\n    document.querySelector('body').appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n\r\n    success();\r\n  });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as configuratorActions from '../configuratorActions';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\nimport styles from './SavedProducts.module.scss';\r\n\r\nimport createProductThumb from '../../utils/createProductThumb';\r\n\r\nclass SavedProducts extends Component {\r\n  componentUpdated = false;\r\n\r\n  handleProductClick = items => {\r\n    this.props.setActiveItems(items);\r\n    this.props.savedProductsToggle();\r\n  };\r\n\r\n  handleAddProductClick = e => {\r\n    if (!this.props.configuratorStore.productExists) {\r\n      createProductThumb(this.props.addProduct);\r\n    } else {\r\n      this.activeItem.style.visibility = 'hidden';\r\n\r\n      setTimeout(() => {\r\n        this.activeItem.style.visibility = 'visible';\r\n      }, 200);\r\n    }\r\n  };\r\n\r\n  handleRemoveProductClick = index => {\r\n    this.props.removeProduct(index);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.checkProductExist();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const isCategoriesLoaded = this.props.configuratorStore.isCategoriesLoaded;\r\n\r\n    if (isCategoriesLoaded !== prevProps.configuratorStore.isCategoriesLoaded) {\r\n      if (isCategoriesLoaded) {\r\n        this.props.checkSavedProducts();\r\n      }\r\n    }\r\n\r\n    if (!this.componentUpdated) {\r\n      this.props.checkProductExist();\r\n\r\n      this.componentUpdated = true;\r\n    } else {\r\n      this.componentUpdated = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const t = this.props.t;\r\n    const modal = this.props.configuratorStore.savedProductsModal;\r\n    const savedProducts = this.props.configuratorStore.userSettings\r\n      .savedProducts;\r\n    const activeItems = this.props.configuratorStore.userSettings.activeItems;\r\n\r\n    const savedProductsList = savedProducts.map((item, index) => {\r\n      const productsAreEqual =\r\n        JSON.stringify(item.productParts) === JSON.stringify(activeItems);\r\n      const activeItemClass = productsAreEqual ? styles.active : undefined;\r\n\r\n      return (\r\n        <div\r\n          className={styles.itemWrapper}\r\n          key={index}\r\n          ref={activeItem => productsAreEqual && (this.activeItem = activeItem)}\r\n        >\r\n          <button\r\n            className={styles.btnRemove}\r\n            onClick={this.handleRemoveProductClick.bind(this, index)}\r\n          >\r\n            {t('remove')}\r\n          </button>\r\n          <button\r\n            className={`${styles.btnChange} ${activeItemClass}`}\r\n            id={activeItemClass}\r\n            onClick={this.handleProductClick.bind(this, item.productParts)}\r\n          >\r\n            <img src={item.img} alt=\"\" />\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          isOpen={modal}\r\n          toggle={this.props.savedProductsToggle}\r\n          className={styles.modal}\r\n          centered={true}\r\n        >\r\n          <ModalHeader toggle={this.props.savedProductsToggle}>\r\n            {t('saved_products')}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <button onClick={this.handleAddProductClick}>\r\n              {t('add_product')}\r\n            </button>\r\n            {savedProductsList}\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { ...state };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    savedProductsToggle: () =>\r\n      dispatch(configuratorActions.savedProductsToggle()),\r\n    setActiveItems: items =>\r\n      dispatch(configuratorActions.setActiveItems(items)),\r\n    removeProduct: index => dispatch(configuratorActions.removeProduct(index)),\r\n    addProduct: img => dispatch(configuratorActions.addProduct(img)),\r\n    checkProductExist: () => dispatch(configuratorActions.checkProductExist()),\r\n    checkSavedProducts: () => dispatch(configuratorActions.checkSavedProducts())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(SavedProducts));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as configuratorActions from './configuratorActions';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport i18n from 'i18next';\r\n\r\nimport styles from './Configurator.module.scss';\r\n\r\nimport Menu from './components/Menu';\r\nimport MenuItems from './components/MenuItems';\r\nimport ItemImg from './components/ItemImg';\r\nimport Summary from './components/Summary';\r\nimport SavedProducts from './components/SavedProducts';\r\n\r\nimport translations from '../translations';\r\n\r\nimport { API } from '../app/App';\r\n\r\nexport const API_PRODUCT_EMAIL = 'https://httpbin.org/post';\r\n\r\nclass Configurator extends Component {\r\n  getApiCategories() {\r\n    return API + `categories-${i18n.language}.json`;\r\n  }\r\n\r\n  setDefaultCategory() {\r\n    const summaryActive =\r\n      this.props.match.path === '/' + this.props.t('routeSummaryName');\r\n    const matchCategorySlug = this.props.match.params.category;\r\n    const activeCategoryId = this.props.userSettings.activeCategoryId;\r\n    let activeCategorySlug;\r\n    let activeCategoryIndex;\r\n    const matchCategoryIndex = this.props.categories.findIndex(\r\n      category => category.slug === matchCategorySlug\r\n    );\r\n    let matchCategoryId = null;\r\n\r\n    if (matchCategoryIndex > -1) {\r\n      matchCategoryId = this.props.categories[matchCategoryIndex].id;\r\n    }\r\n\r\n    if (activeCategoryId) {\r\n      activeCategoryIndex = this.props.categories.findIndex(\r\n        category => category.id === activeCategoryId\r\n      );\r\n      activeCategorySlug = this.props.categories[activeCategoryIndex].slug;\r\n    }\r\n\r\n    let firstCategoryId = '';\r\n    let firstCategorySlug = '';\r\n\r\n    if (this.props.categories.length) {\r\n      firstCategoryId = this.props.categories[0].id;\r\n      firstCategorySlug = this.props.categories[0].slug;\r\n    }\r\n\r\n    const setCategory = () => {\r\n      if (summaryActive) {\r\n        this.props.history.replace(\r\n          this.props.routeLng + '/' + this.props.t('routeSummaryName')\r\n        );\r\n      } else if (matchCategorySlug) {\r\n        if (matchCategoryIndex > -1) {\r\n          this.props.setActiveCategory(matchCategoryId);\r\n        } else {\r\n          this.props.setActiveCategory(firstCategoryId);\r\n          this.props.history.replace(\r\n            this.props.routeLng +\r\n              '/' +\r\n              this.props.t('routeCategoryName') +\r\n              '/' +\r\n              firstCategorySlug\r\n          );\r\n        }\r\n      } else if (!activeCategoryId) {\r\n        this.props.setActiveCategory(firstCategoryId);\r\n        this.props.history.replace(\r\n          this.props.routeLng +\r\n            '/' +\r\n            this.props.t('routeCategoryName') +\r\n            '/' +\r\n            firstCategorySlug\r\n        );\r\n      } else if (activeCategoryId) {\r\n        this.props.setActiveCategory(activeCategoryId);\r\n        this.props.history.replace(\r\n          this.props.routeLng +\r\n            '/' +\r\n            this.props.t('routeCategoryName') +\r\n            '/' +\r\n            activeCategorySlug\r\n        );\r\n      }\r\n    };\r\n\r\n    setCategory();\r\n  }\r\n\r\n  setDefaultItems() {\r\n    const activeItems = this.props.configuratorStore.userSettings.activeItems;\r\n\r\n    if (activeItems === null) {\r\n      this.props.setDefaultActiveItems();\r\n    }\r\n\r\n    this.props.setActiveItems();\r\n  }\r\n\r\n  changeLanguage = lng => {\r\n    const { i18n } = this.props;\r\n\r\n    i18n.changeLanguage(lng);\r\n    this.props.saveRouteLng(lng);\r\n  };\r\n\r\n  setRouteLang() {\r\n    const routeLng = this.props.match.params.lng;\r\n    const { i18n } = this.props;\r\n    const { language } = i18n;\r\n\r\n    if (routeLng && routeLng !== language) {\r\n      i18n.changeLanguage(routeLng);\r\n      this.props.saveRouteLng(routeLng);\r\n    } else {\r\n      this.props.saveRouteLng(language);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setRouteLang();\r\n\r\n    const { language } = this.props.i18n;\r\n\r\n    this.language = language;\r\n\r\n    this.props.getCategories(this.getApiCategories()).then(() => {\r\n      this.setDefaultItems();\r\n      this.setDefaultCategory();\r\n      this.props.getDefaultCategory();\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { language } = this.props.i18n;\r\n\r\n    if (language !== this.language) {\r\n      this.props.getCategories(this.getApiCategories()).then(() => {\r\n        this.setDefaultItems();\r\n        this.setDefaultCategory();\r\n        this.props.getDefaultCategory();\r\n      });\r\n\r\n      this.language = language;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const isLoading = this.props.configuratorStore.isLoading;\r\n\r\n    const defaultCategory = this.props.configuratorStore.defaultCategory;\r\n\r\n    const spinner = (\r\n      <div\r\n        className={`d-flex justify-content-center align-items-center ${\r\n          styles.loadingSpinner\r\n        }`}\r\n      >\r\n        <div\r\n          className={`spinner-border text-danger ${\r\n            styles.loadingSpinnerBorder\r\n          }`}\r\n          role=\"status\"\r\n        >\r\n          <span className=\"sr-only\">{t('loading')}...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const Lang = () => {\r\n      const { i18n } = this.props;\r\n      const lang = [];\r\n\r\n      for (const key in translations) {\r\n        const active = key === i18n.language ? styles.active : undefined;\r\n\r\n        if (translations.hasOwnProperty(key)) {\r\n          lang.push(\r\n            <button\r\n              key={lang}\r\n              onClick={() => this.changeLanguage(key)}\r\n              className={`${styles.lang__btn} ${active}`}\r\n            >\r\n              {key.toUpperCase()}\r\n            </button>\r\n          );\r\n        }\r\n      }\r\n\r\n      return <div className={styles.lang}>{lang}</div>;\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className={`d-flex flex-column ${styles.wrapper}`}>\r\n          <header\r\n            className={`${styles.header} text-center text-uppercase my-5`}\r\n          >\r\n            <h1>{t('configurator')}</h1>\r\n            <Lang />\r\n          </header>\r\n          <div className={`row flex-grow-1 ${styles.contentWrapper}`}>\r\n            <div className=\"col-md-2\">\r\n              <Menu />\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <Switch>\r\n                <Route\r\n                  path={\r\n                    this.props.routeLng +\r\n                    '/' +\r\n                    t('routeCategoryName') +\r\n                    '/:category'\r\n                  }\r\n                  component={MenuItems}\r\n                />\r\n                <Route\r\n                  path={this.props.routeLng + '/' + t('routeSummaryName')}\r\n                  component={Summary}\r\n                />\r\n                {defaultCategory ? (\r\n                  <Redirect\r\n                    to={\r\n                      this.props.routeLng +\r\n                      '/' +\r\n                      t('routeCategoryName') +\r\n                      '/' +\r\n                      defaultCategory\r\n                    }\r\n                  />\r\n                ) : null}\r\n              </Switch>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <ItemImg />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SavedProducts />\r\n        {isLoading ? spinner : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state,\r\n    categories: state.configuratorStore.categories,\r\n    userSettings: state.configuratorStore.userSettings,\r\n    routeLng: state.configuratorStore.routeLng\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setActiveCategory: categoryId =>\r\n      dispatch(configuratorActions.setActiveCategory(categoryId)),\r\n    setDefaultActiveItems: () =>\r\n      dispatch(configuratorActions.setDefaultActiveItems()),\r\n    setActiveItems: () => dispatch(configuratorActions.setActiveItems()),\r\n    getCategories: API_CATEGORIES =>\r\n      dispatch(configuratorActions.getCategories(API_CATEGORIES)),\r\n    getDefaultCategory: () =>\r\n      dispatch(configuratorActions.getDefaultCategory()),\r\n    saveRouteLng: lng => dispatch(configuratorActions.saveRouteLng(lng))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(Configurator));\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport Configurator from './configurator/Configurator';\r\n\r\nimport translations from './translations';\r\n\r\nclass Rtr extends Component {\r\n  getLanguagesString() {\r\n    let languages = [];\r\n\r\n    for (const key in translations) {\r\n      languages.push(key);\r\n    }\r\n\r\n    const languagesString = languages.join('|');\r\n\r\n    return languagesString;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route\r\n            path={`/:lng(${this.getLanguagesString()})`}\r\n            component={Configurator}\r\n          />\r\n          <Route\r\n            path={'/' + this.props.t('routeCategoryName') + '/:category'}\r\n            component={Configurator}\r\n          />\r\n          <Route\r\n            path={'/' + this.props.t('routeSummaryName')}\r\n            component={Configurator}\r\n          />\r\n          <Route path=\"/\" component={Configurator} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Rtr);\r\n","import React, { Component, Suspense } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from '../store/store';\r\n\r\nimport Router from '../Router';\r\n\r\nexport const API = process.env.PUBLIC_URL + '/';\r\n\r\nconst Loader = () => <div>loading...</div>;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Suspense fallback={<Loader />}>\r\n          <Router />\r\n        </Suspense>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport translations from './translations';\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: 'pl',\r\n    resources: translations,\r\n\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  });\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Menu_wrapper__3ygBw\",\"link\":\"Menu_link__3Q20T\",\"active\":\"Menu_active__3FToW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Summary_wrapper__2xuqw\",\"item\":\"Summary_item__3fnQD\",\"active\":\"Summary_active__1Qk9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"SavedProducts_itemWrapper__3uf70\",\"modal\":\"SavedProducts_modal__3ccyY\",\"btnChange\":\"SavedProducts_btnChange__lHxmk\",\"active\":\"SavedProducts_active__3zYHw\",\"btnRemove\":\"SavedProducts_btnRemove__QlDR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemsList_item__3FTGi\",\"active\":\"ItemsList_active__dVCSF\",\"simpleModel\":\"ItemsList_simpleModel__2LVpm\",\"thumb\":\"ItemsList_thumb__C54zP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ItemImg_img__A0j5a\",\"bg\":\"ItemImg_bg__3Y3Rr\",\"btnAdd\":\"ItemImg_btnAdd__1Vx4E\",\"active\":\"ItemImg_active__38hnj\"};"],"sourceRoot":""}